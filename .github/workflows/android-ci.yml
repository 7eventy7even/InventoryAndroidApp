name: Android CI

on:
  push:
    tags:
      - 'v*'  # Trigger on any version tag (v1.0, v2.0, etc.)
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Check out
        uses: actions/checkout@v2

      # Step 2: Set up JDK for Gradle
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      # Step 3: Cache Gradle files
      - name: Cache Gradle files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Step 4: Grant execution permissions for gradlew
      - name: Make gradlew executable
        run: chmod +x gradlew

      # Step 5: Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew assembleRelease  # Build Release APK (instead of Debug)

      # Step 6: List APK directory contents (for debugging)
      - name: List APK directory contents
        run: ls -R app/build/outputs/apk/

      # Step 7: Check if APK exists
      - name: Check if APK exists
        run: |
          if [ -f app/build/outputs/apk/release/app-release-unsigned.apk ]; then
            echo "APK exists!"
          else
            echo "APK not found!"
            exit 1
          fi

      # Step 8: Upload APK to GitHub Releases
      - name: Create GitHub Release and Upload APK
        if: github.ref == 'refs/tags/*'  # Trigger only for tags
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/app-release-unsigned.apk  # Use the correct file name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Upload APK as Artifact (Optional, for backup)
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/app-release.apk
